// <auto-generated />
using System;
using AgenciaFinal.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgenciaFinal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgenciaFinal.Models.Agencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantAlojamientos")
                        .HasColumnType("int");

                    b.Property<int?>("id_alojamientoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_alojamientoid");

                    b.ToTable("Agencia");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Alojamiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barrio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cabaniaid")
                        .HasColumnType("int");

                    b.Property<int>("cantidadDePersonas")
                        .HasColumnType("int");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("esHotel")
                        .HasColumnType("bit");

                    b.Property<string>("estrellas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("hotelid")
                        .HasColumnType("int");

                    b.Property<bool>("tv")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("cabaniaid");

                    b.HasIndex("hotelid");

                    b.ToTable("Alojamiento");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Cabania", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("banios")
                        .HasColumnType("int");

                    b.Property<int>("habitaciones")
                        .HasColumnType("int");

                    b.Property<double>("precioPorDia")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Cabania");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Ciudades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Hotel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("precio_por_persona")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Reserva", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("contador")
                        .HasColumnType("int");

                    b.Property<DateTime>("fDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fHasta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_alojamientoid")
                        .HasColumnType("int");

                    b.Property<int?>("id_usuarioid")
                        .HasColumnType("int");

                    b.Property<float>("pDesde")
                        .HasColumnType("real");

                    b.Property<float>("pHasta")
                        .HasColumnType("real");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("id_alojamientoid");

                    b.HasIndex("id_usuarioid");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("correoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("esAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("intentosDeLogueos")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Usuario", "dbo");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Agencia", b =>
                {
                    b.HasOne("AgenciaFinal.Models.Alojamiento", "id_alojamiento")
                        .WithMany()
                        .HasForeignKey("id_alojamientoid");

                    b.Navigation("id_alojamiento");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Alojamiento", b =>
                {
                    b.HasOne("AgenciaFinal.Models.Cabania", "cabania")
                        .WithMany()
                        .HasForeignKey("cabaniaid");

                    b.HasOne("AgenciaFinal.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("hotelid");

                    b.Navigation("cabania");

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("AgenciaFinal.Models.Reserva", b =>
                {
                    b.HasOne("AgenciaFinal.Models.Alojamiento", "id_alojamiento")
                        .WithMany()
                        .HasForeignKey("id_alojamientoid");

                    b.HasOne("AgenciaFinal.Models.Usuario", "id_usuario")
                        .WithMany()
                        .HasForeignKey("id_usuarioid");

                    b.Navigation("id_alojamiento");

                    b.Navigation("id_usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
